<h2>Home</h2>
<form method="POST" action="/detail">
    <input type="text" name="name" placeholder="name" required maxlength="100">
    <button>Search</button>
</form>
<hr>
<h3>name</h3>
{{!-- {{#each data}}
    <li><a href="/api/detail?name={{name}}">{{name}}</a></li>
{{/each}} --}}

<div id="root"></div>
<script type="text/babel">

 //   const students = {{{students}}}
 //   console.log(students)
    /*
    {"_id":"6098953414a7f7f0bc4ce672","name":"alan","age":21,"classes":"csc150, we120","gender":"male"},{"_id":"6098b435e039a3428b64f7e8","name":"tom","age":24,"classes":"itc298, csc110","gender":"male"},{"_id":"6098b7f1e039a3428b64f7ec","name":"jack","age":69,"classes":"web150, web120","gender":"male"},{"_id":"6098b820e039a3428b64f7ed","name":"bin","age":27,"classes":"web150, web120","gender":"male"},{"_id":"6098b83ae039a3428b64f7ee","name":"james","age":24,"classes":"eng150, itc120","gender":"male"},{"_id":"6098b858e039a3428b64f7ef","name":"test1"},{"_id":"609a0c04ad1bd91da72797d4","name":"test3"},{"_id":"609a0c10ad1bd91da72797d5","name":"test2"},{"_id":"60a1fae858425f08f4f7e85c","name":"test5","age":24,"classes":"it122","gender":"male","__v":0}
    */


//return a list of students
    const Students = (props) =>{
        //props is an array
        const listItems = props.names.map((item) => 
        <li key={item._id} id={item._id} onClick={props.clickHandler}>
            {item.name}
        </li>);
        return <ul>{listItems}</ul>
    }

    const ItemDetail = (props) => {
        return <div>
            <hr />
            <h3>Student Details</h3>
            <form>
                Name:<input type="text" name="name" value={props.item.name || ""} onChange={props.handleChange}/><br/>
                Age:<input type="text" name="age" value={props.item.age || ""} onChange={props.handleChange}/><br/>
                Classes:<input type="text" name="classes" value={props.item.classes || ""} onChange={props.handleChange}/><br/>
                Gender:<input type="text" name="gender" value={props.item.gender || ""} onChange={props.handleChange}/><br/>
            </form>
            <button name="clear" onClick={props.clearForm}>Clear</button>&nbsp;
            <button name="save" onClick={props.saveItem}>Save</button>&nbsp;
            <button name="delete" onClick={props.deleteItem}>Delete</button>
            </div>
    }

    class StudentApp extends React.Component {
        constructor(props) {
        super(props);
        this.state = {
            items: {{{students}}},
            currentItem:{}
            };
            this.selectItem = this.selectItem.bind(this);
            this.handleChange = this.handleChange.bind(this);
            this.clearForm = this.clearForm.bind(this);
            this.saveItem = this.saveItem.bind(this);
            this.deleteItem = this.deleteItem.bind(this);
        }

        //click event handler
        selectItem = (event) =>{
           //<a href={"/api/detail?name="+item.name}>
           const found = this.state.items.find((item) => {
               return item.name === event.target.innerText;
           });
           this.setState({currentItem:found})
         //  window.location.href = "/api/detail?name=" + event.target.innerText;
        }

        handleChange = (event) =>{
            let newItem = this.state.currentItem;
            newItem[event.target.name] = event.target.value;
            this.setState({currentItem:newItem})
        }

        clearForm = () =>{
            this.setState({currentItem:{}})
        }

        saveItem = () =>{
            //save edits to DB
            if(this.state.currentItem == {}) return

            let newItem = this.state.currentItem;


            fetch("/api/add/",{
                method:"POST",
                headers:{'Content-Type':'application/json'},
                body:JSON.stringify(newItem)
            })
                .then(res => res.json())
                .then((json) => { 
                    console.log(json) 
                    // if this new item, add to lisf of items
                     if(!json.updated === 0){
                        newItem._id = json._id
                        let newList = this.state.items;
                        newList.push(newItem);
                        this.setState({items:newList});
                     }

                });
        }

        deleteItem = () =>{
            if(this.state.currentItem == {}) return

            let url ="/api/delete?name="+this.state.currentItem.name;

            fetch(url)
            .then(res => res.json())
            .then((json) => {
                if(json.deleted.deletedCount>0){
                    let newList = this.state.items.filter(item => {
                        return item.name != this.state.currentItem.name;
                    })
                    this.setState({items:newList, currentItem:{}})
                }
                
                })

        }

    render() {
        return ( 
            <div> <h2>Inventory</h2>
                <Students names={this.state.items} clickHandler={this.selectItem}/>
                <ItemDetail 
                    item={this.state.currentItem} 
                    handleChange={this.handleChange}
                    clearForm={this.clearForm}
                    saveItem={this.saveItem}
                    deleteItem={this.deleteItem}
                />
            </div> );
        }
    }

    ReactDOM.render(  <StudentApp />,  document.getElementById('root') );

//    ReactDOM.render(
//        <div><Students names={students} clickHandler={showDetail}/></div>,
//       document.getElementById('root')
//   );

</script>